/*
 * 扩展接入
 * 接入jugugu区块链全包的全部接口，访问IP需要连续管理员，添加业务服务器IP
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineObject4
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-01T20:48:31.465+08:00[Asia/Shanghai]")
public class InlineObject4 {
  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_ROBOTCODE = "robotcode";
  @SerializedName(SERIALIZED_NAME_ROBOTCODE)
  private String robotcode;

  public static final String SERIALIZED_NAME_ROBOTCODEID = "robotcodeid";
  @SerializedName(SERIALIZED_NAME_ROBOTCODEID)
  private String robotcodeid;


  public InlineObject4 phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * 国内手机号
   * @return phone
  **/
  @ApiModelProperty(required = true, value = "国内手机号")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public InlineObject4 code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(required = true, value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public InlineObject4 robotcode(String robotcode) {
    
    this.robotcode = robotcode;
    return this;
  }

   /**
   * Get robotcode
   * @return robotcode
  **/
  @ApiModelProperty(required = true, value = "")

  public String getRobotcode() {
    return robotcode;
  }


  public void setRobotcode(String robotcode) {
    this.robotcode = robotcode;
  }


  public InlineObject4 robotcodeid(String robotcodeid) {
    
    this.robotcodeid = robotcodeid;
    return this;
  }

   /**
   * Get robotcodeid
   * @return robotcodeid
  **/
  @ApiModelProperty(required = true, value = "")

  public String getRobotcodeid() {
    return robotcodeid;
  }


  public void setRobotcodeid(String robotcodeid) {
    this.robotcodeid = robotcodeid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject4 inlineObject4 = (InlineObject4) o;
    return Objects.equals(this.phone, inlineObject4.phone) &&
        Objects.equals(this.code, inlineObject4.code) &&
        Objects.equals(this.robotcode, inlineObject4.robotcode) &&
        Objects.equals(this.robotcodeid, inlineObject4.robotcodeid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phone, code, robotcode, robotcodeid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject4 {\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    robotcode: ").append(toIndentedString(robotcode)).append("\n");
    sb.append("    robotcodeid: ").append(toIndentedString(robotcodeid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

