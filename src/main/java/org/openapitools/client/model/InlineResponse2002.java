/*
 * 扩展接入
 * 接入jugugu区块链全包的全部接口，访问IP需要连续管理员，添加业务服务器IP
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2002
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-01T20:48:31.465+08:00[Asia/Shanghai]")
public class InlineResponse2002 {
  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_MSG = "msg";
  @SerializedName(SERIALIZED_NAME_MSG)
  private String msg;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_VIRIFYCODEID = "virifycodeid";
  @SerializedName(SERIALIZED_NAME_VIRIFYCODEID)
  private String virifycodeid;

  public static final String SERIALIZED_NAME_VIRIFYIMAGE = "virifyimage";
  @SerializedName(SERIALIZED_NAME_VIRIFYIMAGE)
  private String virifyimage;

  public static final String SERIALIZED_NAME_CONFLUXADDRESS = "confluxaddress";
  @SerializedName(SERIALIZED_NAME_CONFLUXADDRESS)
  private String confluxaddress;

  public static final String SERIALIZED_NAME_ETHADDRESS = "ethaddress";
  @SerializedName(SERIALIZED_NAME_ETHADDRESS)
  private String ethaddress;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_COOKIETOKEN = "cookietoken";
  @SerializedName(SERIALIZED_NAME_COOKIETOKEN)
  private String cookietoken;


  public InlineResponse2002 state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * -1代表错误 1代表成功 0代表提示
   * @return state
  **/
  @ApiModelProperty(required = true, value = "-1代表错误 1代表成功 0代表提示")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public InlineResponse2002 msg(String msg) {
    
    this.msg = msg;
    return this;
  }

   /**
   * 状态码对应的详细信息
   * @return msg
  **/
  @ApiModelProperty(required = true, value = "状态码对应的详细信息")

  public String getMsg() {
    return msg;
  }


  public void setMsg(String msg) {
    this.msg = msg;
  }


  public InlineResponse2002 phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * 手机号
   * @return phone
  **/
  @ApiModelProperty(required = true, value = "手机号")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public InlineResponse2002 virifycodeid(String virifycodeid) {
    
    this.virifycodeid = virifycodeid;
    return this;
  }

   /**
   * 验证码图片ID
   * @return virifycodeid
  **/
  @ApiModelProperty(required = true, value = "验证码图片ID")

  public String getVirifycodeid() {
    return virifycodeid;
  }


  public void setVirifycodeid(String virifycodeid) {
    this.virifycodeid = virifycodeid;
  }


  public InlineResponse2002 virifyimage(String virifyimage) {
    
    this.virifyimage = virifyimage;
    return this;
  }

   /**
   * 验证码图片数据data:image/png;base64,格式
   * @return virifyimage
  **/
  @ApiModelProperty(required = true, value = "验证码图片数据data:image/png;base64,格式")

  public String getVirifyimage() {
    return virifyimage;
  }


  public void setVirifyimage(String virifyimage) {
    this.virifyimage = virifyimage;
  }


  public InlineResponse2002 confluxaddress(String confluxaddress) {
    
    this.confluxaddress = confluxaddress;
    return this;
  }

   /**
   * 树图区块链地址
   * @return confluxaddress
  **/
  @ApiModelProperty(required = true, value = "树图区块链地址")

  public String getConfluxaddress() {
    return confluxaddress;
  }


  public void setConfluxaddress(String confluxaddress) {
    this.confluxaddress = confluxaddress;
  }


  public InlineResponse2002 ethaddress(String ethaddress) {
    
    this.ethaddress = ethaddress;
    return this;
  }

   /**
   * 以太坊及其侧链地址
   * @return ethaddress
  **/
  @ApiModelProperty(required = true, value = "以太坊及其侧链地址")

  public String getEthaddress() {
    return ethaddress;
  }


  public void setEthaddress(String ethaddress) {
    this.ethaddress = ethaddress;
  }


  public InlineResponse2002 token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * 登录成功后获得的令牌，用于jugugu其他各类操作
   * @return token
  **/
  @ApiModelProperty(required = true, value = "登录成功后获得的令牌，用于jugugu其他各类操作")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public InlineResponse2002 cookietoken(String cookietoken) {
    
    this.cookietoken = cookietoken;
    return this;
  }

   /**
   * cookie无感登录的令牌
   * @return cookietoken
  **/
  @ApiModelProperty(required = true, value = "cookie无感登录的令牌")

  public String getCookietoken() {
    return cookietoken;
  }


  public void setCookietoken(String cookietoken) {
    this.cookietoken = cookietoken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002 inlineResponse2002 = (InlineResponse2002) o;
    return Objects.equals(this.state, inlineResponse2002.state) &&
        Objects.equals(this.msg, inlineResponse2002.msg) &&
        Objects.equals(this.phone, inlineResponse2002.phone) &&
        Objects.equals(this.virifycodeid, inlineResponse2002.virifycodeid) &&
        Objects.equals(this.virifyimage, inlineResponse2002.virifyimage) &&
        Objects.equals(this.confluxaddress, inlineResponse2002.confluxaddress) &&
        Objects.equals(this.ethaddress, inlineResponse2002.ethaddress) &&
        Objects.equals(this.token, inlineResponse2002.token) &&
        Objects.equals(this.cookietoken, inlineResponse2002.cookietoken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, msg, phone, virifycodeid, virifyimage, confluxaddress, ethaddress, token, cookietoken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002 {\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    virifycodeid: ").append(toIndentedString(virifycodeid)).append("\n");
    sb.append("    virifyimage: ").append(toIndentedString(virifyimage)).append("\n");
    sb.append("    confluxaddress: ").append(toIndentedString(confluxaddress)).append("\n");
    sb.append("    ethaddress: ").append(toIndentedString(ethaddress)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    cookietoken: ").append(toIndentedString(cookietoken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

